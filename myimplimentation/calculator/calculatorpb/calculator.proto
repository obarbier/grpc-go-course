syntax = "proto3";

package calculatorpb;

option go_package="./calculator/calculatorpb";

message SumRequest{
    int32 a = 1;
    int32 b = 2;
}

message SumResponse{
    int32 result = 1;
}

message PrimeNumberDecompositionRequest{
    int32 number = 1;
}

message PrimeNumberDecompositionResponse{
    int32 result = 1;
}

message ComputeAverageRequest{
    float number = 1;
}

message ComputeAverageResponse{
    float result = 1;
}

message FindMaximumRequest{
    double number = 1;
}

message FindMaximumResponse{
    double result =  1;
}

message SquareRootRequest{
    int32 number =1;
}

message SquareRootResponse{
    double result =1;
}

service Calulator {
    //unary
    rpc Sum(SumRequest) returns (SumResponse){};

    

    // Server Streaming
    rpc PrimeNumberDecomposition(PrimeNumberDecompositionRequest) returns (stream PrimeNumberDecompositionResponse){};

    // Client Streaming 
    rpc ComputeAverage(stream ComputeAverageRequest) returns (ComputeAverageResponse){};

    // Bidi Streaming
    rpc FindMaximum(stream FindMaximumRequest) returns (stream FindMaximumResponse){};

    // Adding comments allow for good documentation Therefore:
    // SquareRoot will throws execption if SquareRootRequest.number is negative
    // Error being send is of type INVALID_ARGUMENT
    rpc SquareRoot(SquareRootRequest) returns (SquareRootResponse){};
}